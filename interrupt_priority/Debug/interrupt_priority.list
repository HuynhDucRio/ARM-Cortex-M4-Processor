
interrupt_priority.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000c48  08000198  08000198  00001198  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000028  08000de0  08000de0  00001de0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08000e08  08000e08  00002068  2**0
                  CONTENTS
  4 .ARM          00000000  08000e08  08000e08  00002068  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000e08  08000e08  00002068  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000e08  08000e08  00001e08  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08000e0c  08000e0c  00001e0c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000068  20000000  08000e10  00002000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000016c  20000068  08000e78  00002068  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200001d4  08000e78  000021d4  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00002068  2**0
                  CONTENTS, READONLY
 12 .debug_info   000009e5  00000000  00000000  00002098  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000390  00000000  00000000  00002a7d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000128  00000000  00000000  00002e10  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000000ca  00000000  00000000  00002f38  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00002cca  00000000  00000000  00003002  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000175e  00000000  00000000  00005ccc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0000982d  00000000  00000000  0000742a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  00010c57  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000a10  00000000  00000000  00010c9c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000071  00000000  00000000  000116ac  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000198 <__do_global_dtors_aux>:
 8000198:	b510      	push	{r4, lr}
 800019a:	4c05      	ldr	r4, [pc, #20]	@ (80001b0 <__do_global_dtors_aux+0x18>)
 800019c:	7823      	ldrb	r3, [r4, #0]
 800019e:	b933      	cbnz	r3, 80001ae <__do_global_dtors_aux+0x16>
 80001a0:	4b04      	ldr	r3, [pc, #16]	@ (80001b4 <__do_global_dtors_aux+0x1c>)
 80001a2:	b113      	cbz	r3, 80001aa <__do_global_dtors_aux+0x12>
 80001a4:	4804      	ldr	r0, [pc, #16]	@ (80001b8 <__do_global_dtors_aux+0x20>)
 80001a6:	f3af 8000 	nop.w
 80001aa:	2301      	movs	r3, #1
 80001ac:	7023      	strb	r3, [r4, #0]
 80001ae:	bd10      	pop	{r4, pc}
 80001b0:	20000068 	.word	0x20000068
 80001b4:	00000000 	.word	0x00000000
 80001b8:	08000dc8 	.word	0x08000dc8

080001bc <frame_dummy>:
 80001bc:	b508      	push	{r3, lr}
 80001be:	4b03      	ldr	r3, [pc, #12]	@ (80001cc <frame_dummy+0x10>)
 80001c0:	b11b      	cbz	r3, 80001ca <frame_dummy+0xe>
 80001c2:	4903      	ldr	r1, [pc, #12]	@ (80001d0 <frame_dummy+0x14>)
 80001c4:	4803      	ldr	r0, [pc, #12]	@ (80001d4 <frame_dummy+0x18>)
 80001c6:	f3af 8000 	nop.w
 80001ca:	bd08      	pop	{r3, pc}
 80001cc:	00000000 	.word	0x00000000
 80001d0:	2000006c 	.word	0x2000006c
 80001d4:	08000dc8 	.word	0x08000dc8

080001d8 <config_priority_irqs>:
uint32_t *pNVIC_ISPR_Base = (uint32_t*)0XE000E200;
uint32_t *pNVIC_ISER_Base = (uint32_t*)0XE000E100;


void config_priority_irqs(uint8_t irq_no, uint8_t pri_val)
{
 80001d8:	b480      	push	{r7}
 80001da:	b087      	sub	sp, #28
 80001dc:	af00      	add	r7, sp, #0
 80001de:	4603      	mov	r3, r0
 80001e0:	460a      	mov	r2, r1
 80001e2:	71fb      	strb	r3, [r7, #7]
 80001e4:	4613      	mov	r3, r2
 80001e6:	71bb      	strb	r3, [r7, #6]
	//1. Cal the iprx
	uint8_t iprx = irq_no / 4;
 80001e8:	79fb      	ldrb	r3, [r7, #7]
 80001ea:	089b      	lsrs	r3, r3, #2
 80001ec:	75fb      	strb	r3, [r7, #23]
	uint32_t *ipr = pNVIC_IPR_Base + iprx;
 80001ee:	4b12      	ldr	r3, [pc, #72]	@ (8000238 <config_priority_irqs+0x60>)
 80001f0:	681a      	ldr	r2, [r3, #0]
 80001f2:	7dfb      	ldrb	r3, [r7, #23]
 80001f4:	009b      	lsls	r3, r3, #2
 80001f6:	4413      	add	r3, r2
 80001f8:	613b      	str	r3, [r7, #16]
	//2. Cal the pos
	uint8_t pos = (irq_no % 4) * 8;
 80001fa:	79fb      	ldrb	r3, [r7, #7]
 80001fc:	f003 0303 	and.w	r3, r3, #3
 8000200:	b2db      	uxtb	r3, r3
 8000202:	00db      	lsls	r3, r3, #3
 8000204:	73fb      	strb	r3, [r7, #15]
	//3. Config the pri_val
	*ipr &= ~(0xFF << pos);
 8000206:	693b      	ldr	r3, [r7, #16]
 8000208:	681b      	ldr	r3, [r3, #0]
 800020a:	7bfa      	ldrb	r2, [r7, #15]
 800020c:	21ff      	movs	r1, #255	@ 0xff
 800020e:	fa01 f202 	lsl.w	r2, r1, r2
 8000212:	43d2      	mvns	r2, r2
 8000214:	401a      	ands	r2, r3
 8000216:	693b      	ldr	r3, [r7, #16]
 8000218:	601a      	str	r2, [r3, #0]
	*ipr |= (pri_val << pos);
 800021a:	693b      	ldr	r3, [r7, #16]
 800021c:	681b      	ldr	r3, [r3, #0]
 800021e:	79b9      	ldrb	r1, [r7, #6]
 8000220:	7bfa      	ldrb	r2, [r7, #15]
 8000222:	fa01 f202 	lsl.w	r2, r1, r2
 8000226:	431a      	orrs	r2, r3
 8000228:	693b      	ldr	r3, [r7, #16]
 800022a:	601a      	str	r2, [r3, #0]
}
 800022c:	bf00      	nop
 800022e:	371c      	adds	r7, #28
 8000230:	46bd      	mov	sp, r7
 8000232:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000236:	4770      	bx	lr
 8000238:	20000000 	.word	0x20000000

0800023c <main>:

int main(void)
{
 800023c:	b580      	push	{r7, lr}
 800023e:	b082      	sub	sp, #8
 8000240:	af00      	add	r7, sp, #0
	//1. Config priority in SCB
	config_priority_irqs(TIM2_IRQNO, 0x80);
 8000242:	2180      	movs	r1, #128	@ 0x80
 8000244:	201c      	movs	r0, #28
 8000246:	f7ff ffc7 	bl	80001d8 <config_priority_irqs>
	config_priority_irqs(I2C1_IRQNO, 0x70);
 800024a:	2170      	movs	r1, #112	@ 0x70
 800024c:	201f      	movs	r0, #31
 800024e:	f7ff ffc3 	bl	80001d8 <config_priority_irqs>
	//2. Pending in NVIC ISPR
	uint32_t *ISPR =(uint32_t*)(pNVIC_ISPR_Base + (TIM2_IRQNO / 32));
 8000252:	4b0e      	ldr	r3, [pc, #56]	@ (800028c <main+0x50>)
 8000254:	681b      	ldr	r3, [r3, #0]
 8000256:	607b      	str	r3, [r7, #4]
	*ISPR |= (1 << (TIM2_IRQNO));
 8000258:	687b      	ldr	r3, [r7, #4]
 800025a:	681b      	ldr	r3, [r3, #0]
 800025c:	f043 5280 	orr.w	r2, r3, #268435456	@ 0x10000000
 8000260:	687b      	ldr	r3, [r7, #4]
 8000262:	601a      	str	r2, [r3, #0]


	//3. Enable in NVIC ISER
	uint32_t *ISER =(uint32_t*) (pNVIC_ISER_Base + (I2C1_IRQNO / 32));
 8000264:	4b0a      	ldr	r3, [pc, #40]	@ (8000290 <main+0x54>)
 8000266:	681b      	ldr	r3, [r3, #0]
 8000268:	603b      	str	r3, [r7, #0]
	*ISER |= (1 << (I2C1_IRQNO));
 800026a:	683b      	ldr	r3, [r7, #0]
 800026c:	681b      	ldr	r3, [r3, #0]
 800026e:	f043 4200 	orr.w	r2, r3, #2147483648	@ 0x80000000
 8000272:	683b      	ldr	r3, [r7, #0]
 8000274:	601a      	str	r2, [r3, #0]

	ISER =(pNVIC_ISER_Base + (TIM2_IRQNO / 32));
 8000276:	4b06      	ldr	r3, [pc, #24]	@ (8000290 <main+0x54>)
 8000278:	681b      	ldr	r3, [r3, #0]
 800027a:	603b      	str	r3, [r7, #0]
	*ISER |= (1 << (TIM2_IRQNO));
 800027c:	683b      	ldr	r3, [r7, #0]
 800027e:	681b      	ldr	r3, [r3, #0]
 8000280:	f043 5280 	orr.w	r2, r3, #268435456	@ 0x10000000
 8000284:	683b      	ldr	r3, [r7, #0]
 8000286:	601a      	str	r2, [r3, #0]


	for(;;);
 8000288:	bf00      	nop
 800028a:	e7fd      	b.n	8000288 <main+0x4c>
 800028c:	20000004 	.word	0x20000004
 8000290:	20000008 	.word	0x20000008

08000294 <TIM2_IRQHandler>:
}

//ISRs
void TIM2_IRQHandler(void)
{
 8000294:	b580      	push	{r7, lr}
 8000296:	b082      	sub	sp, #8
 8000298:	af00      	add	r7, sp, #0
	printf("[TIM2 Handler]\n");
 800029a:	4807      	ldr	r0, [pc, #28]	@ (80002b8 <TIM2_IRQHandler+0x24>)
 800029c:	f000 fa00 	bl	80006a0 <puts>
	uint32_t *ISPR = (pNVIC_ISPR_Base + (I2C1_IRQNO / 32));
 80002a0:	4b06      	ldr	r3, [pc, #24]	@ (80002bc <TIM2_IRQHandler+0x28>)
 80002a2:	681b      	ldr	r3, [r3, #0]
 80002a4:	607b      	str	r3, [r7, #4]
	*ISPR |= (1 << (I2C1_IRQNO));
 80002a6:	687b      	ldr	r3, [r7, #4]
 80002a8:	681b      	ldr	r3, [r3, #0]
 80002aa:	f043 4200 	orr.w	r2, r3, #2147483648	@ 0x80000000
 80002ae:	687b      	ldr	r3, [r7, #4]
 80002b0:	601a      	str	r2, [r3, #0]
	while(1);
 80002b2:	bf00      	nop
 80002b4:	e7fd      	b.n	80002b2 <TIM2_IRQHandler+0x1e>
 80002b6:	bf00      	nop
 80002b8:	08000de0 	.word	0x08000de0
 80002bc:	20000004 	.word	0x20000004

080002c0 <I2C1_EV_IRQHandler>:
}

void I2C1_EV_IRQHandler(void)
{
 80002c0:	b580      	push	{r7, lr}
 80002c2:	af00      	add	r7, sp, #0
	printf("[I2C1_EV_IRQHandler]\n");
 80002c4:	4802      	ldr	r0, [pc, #8]	@ (80002d0 <I2C1_EV_IRQHandler+0x10>)
 80002c6:	f000 f9eb 	bl	80006a0 <puts>
}
 80002ca:	bf00      	nop
 80002cc:	bd80      	pop	{r7, pc}
 80002ce:	bf00      	nop
 80002d0:	08000df0 	.word	0x08000df0

080002d4 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80002d4:	b580      	push	{r7, lr}
 80002d6:	b086      	sub	sp, #24
 80002d8:	af00      	add	r7, sp, #0
 80002da:	60f8      	str	r0, [r7, #12]
 80002dc:	60b9      	str	r1, [r7, #8]
 80002de:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002e0:	2300      	movs	r3, #0
 80002e2:	617b      	str	r3, [r7, #20]
 80002e4:	e00a      	b.n	80002fc <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80002e6:	f3af 8000 	nop.w
 80002ea:	4601      	mov	r1, r0
 80002ec:	68bb      	ldr	r3, [r7, #8]
 80002ee:	1c5a      	adds	r2, r3, #1
 80002f0:	60ba      	str	r2, [r7, #8]
 80002f2:	b2ca      	uxtb	r2, r1
 80002f4:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002f6:	697b      	ldr	r3, [r7, #20]
 80002f8:	3301      	adds	r3, #1
 80002fa:	617b      	str	r3, [r7, #20]
 80002fc:	697a      	ldr	r2, [r7, #20]
 80002fe:	687b      	ldr	r3, [r7, #4]
 8000300:	429a      	cmp	r2, r3
 8000302:	dbf0      	blt.n	80002e6 <_read+0x12>
  }

  return len;
 8000304:	687b      	ldr	r3, [r7, #4]
}
 8000306:	4618      	mov	r0, r3
 8000308:	3718      	adds	r7, #24
 800030a:	46bd      	mov	sp, r7
 800030c:	bd80      	pop	{r7, pc}

0800030e <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800030e:	b580      	push	{r7, lr}
 8000310:	b086      	sub	sp, #24
 8000312:	af00      	add	r7, sp, #0
 8000314:	60f8      	str	r0, [r7, #12]
 8000316:	60b9      	str	r1, [r7, #8]
 8000318:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800031a:	2300      	movs	r3, #0
 800031c:	617b      	str	r3, [r7, #20]
 800031e:	e009      	b.n	8000334 <_write+0x26>
  {
    __io_putchar(*ptr++);
 8000320:	68bb      	ldr	r3, [r7, #8]
 8000322:	1c5a      	adds	r2, r3, #1
 8000324:	60ba      	str	r2, [r7, #8]
 8000326:	781b      	ldrb	r3, [r3, #0]
 8000328:	4618      	mov	r0, r3
 800032a:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800032e:	697b      	ldr	r3, [r7, #20]
 8000330:	3301      	adds	r3, #1
 8000332:	617b      	str	r3, [r7, #20]
 8000334:	697a      	ldr	r2, [r7, #20]
 8000336:	687b      	ldr	r3, [r7, #4]
 8000338:	429a      	cmp	r2, r3
 800033a:	dbf1      	blt.n	8000320 <_write+0x12>
  }
  return len;
 800033c:	687b      	ldr	r3, [r7, #4]
}
 800033e:	4618      	mov	r0, r3
 8000340:	3718      	adds	r7, #24
 8000342:	46bd      	mov	sp, r7
 8000344:	bd80      	pop	{r7, pc}

08000346 <_close>:

int _close(int file)
{
 8000346:	b480      	push	{r7}
 8000348:	b083      	sub	sp, #12
 800034a:	af00      	add	r7, sp, #0
 800034c:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 800034e:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000352:	4618      	mov	r0, r3
 8000354:	370c      	adds	r7, #12
 8000356:	46bd      	mov	sp, r7
 8000358:	f85d 7b04 	ldr.w	r7, [sp], #4
 800035c:	4770      	bx	lr

0800035e <_fstat>:


int _fstat(int file, struct stat *st)
{
 800035e:	b480      	push	{r7}
 8000360:	b083      	sub	sp, #12
 8000362:	af00      	add	r7, sp, #0
 8000364:	6078      	str	r0, [r7, #4]
 8000366:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8000368:	683b      	ldr	r3, [r7, #0]
 800036a:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 800036e:	605a      	str	r2, [r3, #4]
  return 0;
 8000370:	2300      	movs	r3, #0
}
 8000372:	4618      	mov	r0, r3
 8000374:	370c      	adds	r7, #12
 8000376:	46bd      	mov	sp, r7
 8000378:	f85d 7b04 	ldr.w	r7, [sp], #4
 800037c:	4770      	bx	lr

0800037e <_isatty>:

int _isatty(int file)
{
 800037e:	b480      	push	{r7}
 8000380:	b083      	sub	sp, #12
 8000382:	af00      	add	r7, sp, #0
 8000384:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8000386:	2301      	movs	r3, #1
}
 8000388:	4618      	mov	r0, r3
 800038a:	370c      	adds	r7, #12
 800038c:	46bd      	mov	sp, r7
 800038e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000392:	4770      	bx	lr

08000394 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000394:	b480      	push	{r7}
 8000396:	b085      	sub	sp, #20
 8000398:	af00      	add	r7, sp, #0
 800039a:	60f8      	str	r0, [r7, #12]
 800039c:	60b9      	str	r1, [r7, #8]
 800039e:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80003a0:	2300      	movs	r3, #0
}
 80003a2:	4618      	mov	r0, r3
 80003a4:	3714      	adds	r7, #20
 80003a6:	46bd      	mov	sp, r7
 80003a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003ac:	4770      	bx	lr
	...

080003b0 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80003b0:	b580      	push	{r7, lr}
 80003b2:	b086      	sub	sp, #24
 80003b4:	af00      	add	r7, sp, #0
 80003b6:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80003b8:	4a14      	ldr	r2, [pc, #80]	@ (800040c <_sbrk+0x5c>)
 80003ba:	4b15      	ldr	r3, [pc, #84]	@ (8000410 <_sbrk+0x60>)
 80003bc:	1ad3      	subs	r3, r2, r3
 80003be:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80003c0:	697b      	ldr	r3, [r7, #20]
 80003c2:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80003c4:	4b13      	ldr	r3, [pc, #76]	@ (8000414 <_sbrk+0x64>)
 80003c6:	681b      	ldr	r3, [r3, #0]
 80003c8:	2b00      	cmp	r3, #0
 80003ca:	d102      	bne.n	80003d2 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80003cc:	4b11      	ldr	r3, [pc, #68]	@ (8000414 <_sbrk+0x64>)
 80003ce:	4a12      	ldr	r2, [pc, #72]	@ (8000418 <_sbrk+0x68>)
 80003d0:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80003d2:	4b10      	ldr	r3, [pc, #64]	@ (8000414 <_sbrk+0x64>)
 80003d4:	681a      	ldr	r2, [r3, #0]
 80003d6:	687b      	ldr	r3, [r7, #4]
 80003d8:	4413      	add	r3, r2
 80003da:	693a      	ldr	r2, [r7, #16]
 80003dc:	429a      	cmp	r2, r3
 80003de:	d207      	bcs.n	80003f0 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80003e0:	f000 fa8c 	bl	80008fc <__errno>
 80003e4:	4603      	mov	r3, r0
 80003e6:	220c      	movs	r2, #12
 80003e8:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80003ea:	f04f 33ff 	mov.w	r3, #4294967295
 80003ee:	e009      	b.n	8000404 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80003f0:	4b08      	ldr	r3, [pc, #32]	@ (8000414 <_sbrk+0x64>)
 80003f2:	681b      	ldr	r3, [r3, #0]
 80003f4:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80003f6:	4b07      	ldr	r3, [pc, #28]	@ (8000414 <_sbrk+0x64>)
 80003f8:	681a      	ldr	r2, [r3, #0]
 80003fa:	687b      	ldr	r3, [r7, #4]
 80003fc:	4413      	add	r3, r2
 80003fe:	4a05      	ldr	r2, [pc, #20]	@ (8000414 <_sbrk+0x64>)
 8000400:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8000402:	68fb      	ldr	r3, [r7, #12]
}
 8000404:	4618      	mov	r0, r3
 8000406:	3718      	adds	r7, #24
 8000408:	46bd      	mov	sp, r7
 800040a:	bd80      	pop	{r7, pc}
 800040c:	20020000 	.word	0x20020000
 8000410:	00000400 	.word	0x00000400
 8000414:	20000084 	.word	0x20000084
 8000418:	200001d8 	.word	0x200001d8

0800041c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800041c:	480d      	ldr	r0, [pc, #52]	@ (8000454 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800041e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000420:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000424:	480c      	ldr	r0, [pc, #48]	@ (8000458 <LoopForever+0x6>)
  ldr r1, =_edata
 8000426:	490d      	ldr	r1, [pc, #52]	@ (800045c <LoopForever+0xa>)
  ldr r2, =_sidata
 8000428:	4a0d      	ldr	r2, [pc, #52]	@ (8000460 <LoopForever+0xe>)
  movs r3, #0
 800042a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800042c:	e002      	b.n	8000434 <LoopCopyDataInit>

0800042e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800042e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000430:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000432:	3304      	adds	r3, #4

08000434 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000434:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000436:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000438:	d3f9      	bcc.n	800042e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800043a:	4a0a      	ldr	r2, [pc, #40]	@ (8000464 <LoopForever+0x12>)
  ldr r4, =_ebss
 800043c:	4c0a      	ldr	r4, [pc, #40]	@ (8000468 <LoopForever+0x16>)
  movs r3, #0
 800043e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000440:	e001      	b.n	8000446 <LoopFillZerobss>

08000442 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000442:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000444:	3204      	adds	r2, #4

08000446 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000446:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000448:	d3fb      	bcc.n	8000442 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800044a:	f000 fa5d 	bl	8000908 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800044e:	f7ff fef5 	bl	800023c <main>

08000452 <LoopForever>:

LoopForever:
  b LoopForever
 8000452:	e7fe      	b.n	8000452 <LoopForever>
  ldr   r0, =_estack
 8000454:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000458:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800045c:	20000068 	.word	0x20000068
  ldr r2, =_sidata
 8000460:	08000e10 	.word	0x08000e10
  ldr r2, =_sbss
 8000464:	20000068 	.word	0x20000068
  ldr r4, =_ebss
 8000468:	200001d4 	.word	0x200001d4

0800046c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800046c:	e7fe      	b.n	800046c <ADC_IRQHandler>
	...

08000470 <std>:
 8000470:	2300      	movs	r3, #0
 8000472:	b510      	push	{r4, lr}
 8000474:	4604      	mov	r4, r0
 8000476:	e9c0 3300 	strd	r3, r3, [r0]
 800047a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800047e:	6083      	str	r3, [r0, #8]
 8000480:	8181      	strh	r1, [r0, #12]
 8000482:	6643      	str	r3, [r0, #100]	@ 0x64
 8000484:	81c2      	strh	r2, [r0, #14]
 8000486:	6183      	str	r3, [r0, #24]
 8000488:	4619      	mov	r1, r3
 800048a:	2208      	movs	r2, #8
 800048c:	305c      	adds	r0, #92	@ 0x5c
 800048e:	f000 f9e7 	bl	8000860 <memset>
 8000492:	4b0d      	ldr	r3, [pc, #52]	@ (80004c8 <std+0x58>)
 8000494:	6263      	str	r3, [r4, #36]	@ 0x24
 8000496:	4b0d      	ldr	r3, [pc, #52]	@ (80004cc <std+0x5c>)
 8000498:	62a3      	str	r3, [r4, #40]	@ 0x28
 800049a:	4b0d      	ldr	r3, [pc, #52]	@ (80004d0 <std+0x60>)
 800049c:	62e3      	str	r3, [r4, #44]	@ 0x2c
 800049e:	4b0d      	ldr	r3, [pc, #52]	@ (80004d4 <std+0x64>)
 80004a0:	6323      	str	r3, [r4, #48]	@ 0x30
 80004a2:	4b0d      	ldr	r3, [pc, #52]	@ (80004d8 <std+0x68>)
 80004a4:	6224      	str	r4, [r4, #32]
 80004a6:	429c      	cmp	r4, r3
 80004a8:	d006      	beq.n	80004b8 <std+0x48>
 80004aa:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 80004ae:	4294      	cmp	r4, r2
 80004b0:	d002      	beq.n	80004b8 <std+0x48>
 80004b2:	33d0      	adds	r3, #208	@ 0xd0
 80004b4:	429c      	cmp	r4, r3
 80004b6:	d105      	bne.n	80004c4 <std+0x54>
 80004b8:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 80004bc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80004c0:	f000 ba46 	b.w	8000950 <__retarget_lock_init_recursive>
 80004c4:	bd10      	pop	{r4, pc}
 80004c6:	bf00      	nop
 80004c8:	080006b1 	.word	0x080006b1
 80004cc:	080006d3 	.word	0x080006d3
 80004d0:	0800070b 	.word	0x0800070b
 80004d4:	0800072f 	.word	0x0800072f
 80004d8:	20000088 	.word	0x20000088

080004dc <stdio_exit_handler>:
 80004dc:	4a02      	ldr	r2, [pc, #8]	@ (80004e8 <stdio_exit_handler+0xc>)
 80004de:	4903      	ldr	r1, [pc, #12]	@ (80004ec <stdio_exit_handler+0x10>)
 80004e0:	4803      	ldr	r0, [pc, #12]	@ (80004f0 <stdio_exit_handler+0x14>)
 80004e2:	f000 b869 	b.w	80005b8 <_fwalk_sglue>
 80004e6:	bf00      	nop
 80004e8:	2000000c 	.word	0x2000000c
 80004ec:	08000c51 	.word	0x08000c51
 80004f0:	2000001c 	.word	0x2000001c

080004f4 <cleanup_stdio>:
 80004f4:	6841      	ldr	r1, [r0, #4]
 80004f6:	4b0c      	ldr	r3, [pc, #48]	@ (8000528 <cleanup_stdio+0x34>)
 80004f8:	4299      	cmp	r1, r3
 80004fa:	b510      	push	{r4, lr}
 80004fc:	4604      	mov	r4, r0
 80004fe:	d001      	beq.n	8000504 <cleanup_stdio+0x10>
 8000500:	f000 fba6 	bl	8000c50 <_fflush_r>
 8000504:	68a1      	ldr	r1, [r4, #8]
 8000506:	4b09      	ldr	r3, [pc, #36]	@ (800052c <cleanup_stdio+0x38>)
 8000508:	4299      	cmp	r1, r3
 800050a:	d002      	beq.n	8000512 <cleanup_stdio+0x1e>
 800050c:	4620      	mov	r0, r4
 800050e:	f000 fb9f 	bl	8000c50 <_fflush_r>
 8000512:	68e1      	ldr	r1, [r4, #12]
 8000514:	4b06      	ldr	r3, [pc, #24]	@ (8000530 <cleanup_stdio+0x3c>)
 8000516:	4299      	cmp	r1, r3
 8000518:	d004      	beq.n	8000524 <cleanup_stdio+0x30>
 800051a:	4620      	mov	r0, r4
 800051c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000520:	f000 bb96 	b.w	8000c50 <_fflush_r>
 8000524:	bd10      	pop	{r4, pc}
 8000526:	bf00      	nop
 8000528:	20000088 	.word	0x20000088
 800052c:	200000f0 	.word	0x200000f0
 8000530:	20000158 	.word	0x20000158

08000534 <global_stdio_init.part.0>:
 8000534:	b510      	push	{r4, lr}
 8000536:	4b0b      	ldr	r3, [pc, #44]	@ (8000564 <global_stdio_init.part.0+0x30>)
 8000538:	4c0b      	ldr	r4, [pc, #44]	@ (8000568 <global_stdio_init.part.0+0x34>)
 800053a:	4a0c      	ldr	r2, [pc, #48]	@ (800056c <global_stdio_init.part.0+0x38>)
 800053c:	601a      	str	r2, [r3, #0]
 800053e:	4620      	mov	r0, r4
 8000540:	2200      	movs	r2, #0
 8000542:	2104      	movs	r1, #4
 8000544:	f7ff ff94 	bl	8000470 <std>
 8000548:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 800054c:	2201      	movs	r2, #1
 800054e:	2109      	movs	r1, #9
 8000550:	f7ff ff8e 	bl	8000470 <std>
 8000554:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8000558:	2202      	movs	r2, #2
 800055a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800055e:	2112      	movs	r1, #18
 8000560:	f7ff bf86 	b.w	8000470 <std>
 8000564:	200001c0 	.word	0x200001c0
 8000568:	20000088 	.word	0x20000088
 800056c:	080004dd 	.word	0x080004dd

08000570 <__sfp_lock_acquire>:
 8000570:	4801      	ldr	r0, [pc, #4]	@ (8000578 <__sfp_lock_acquire+0x8>)
 8000572:	f000 b9ee 	b.w	8000952 <__retarget_lock_acquire_recursive>
 8000576:	bf00      	nop
 8000578:	200001c9 	.word	0x200001c9

0800057c <__sfp_lock_release>:
 800057c:	4801      	ldr	r0, [pc, #4]	@ (8000584 <__sfp_lock_release+0x8>)
 800057e:	f000 b9e9 	b.w	8000954 <__retarget_lock_release_recursive>
 8000582:	bf00      	nop
 8000584:	200001c9 	.word	0x200001c9

08000588 <__sinit>:
 8000588:	b510      	push	{r4, lr}
 800058a:	4604      	mov	r4, r0
 800058c:	f7ff fff0 	bl	8000570 <__sfp_lock_acquire>
 8000590:	6a23      	ldr	r3, [r4, #32]
 8000592:	b11b      	cbz	r3, 800059c <__sinit+0x14>
 8000594:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000598:	f7ff bff0 	b.w	800057c <__sfp_lock_release>
 800059c:	4b04      	ldr	r3, [pc, #16]	@ (80005b0 <__sinit+0x28>)
 800059e:	6223      	str	r3, [r4, #32]
 80005a0:	4b04      	ldr	r3, [pc, #16]	@ (80005b4 <__sinit+0x2c>)
 80005a2:	681b      	ldr	r3, [r3, #0]
 80005a4:	2b00      	cmp	r3, #0
 80005a6:	d1f5      	bne.n	8000594 <__sinit+0xc>
 80005a8:	f7ff ffc4 	bl	8000534 <global_stdio_init.part.0>
 80005ac:	e7f2      	b.n	8000594 <__sinit+0xc>
 80005ae:	bf00      	nop
 80005b0:	080004f5 	.word	0x080004f5
 80005b4:	200001c0 	.word	0x200001c0

080005b8 <_fwalk_sglue>:
 80005b8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80005bc:	4607      	mov	r7, r0
 80005be:	4688      	mov	r8, r1
 80005c0:	4614      	mov	r4, r2
 80005c2:	2600      	movs	r6, #0
 80005c4:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80005c8:	f1b9 0901 	subs.w	r9, r9, #1
 80005cc:	d505      	bpl.n	80005da <_fwalk_sglue+0x22>
 80005ce:	6824      	ldr	r4, [r4, #0]
 80005d0:	2c00      	cmp	r4, #0
 80005d2:	d1f7      	bne.n	80005c4 <_fwalk_sglue+0xc>
 80005d4:	4630      	mov	r0, r6
 80005d6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80005da:	89ab      	ldrh	r3, [r5, #12]
 80005dc:	2b01      	cmp	r3, #1
 80005de:	d907      	bls.n	80005f0 <_fwalk_sglue+0x38>
 80005e0:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80005e4:	3301      	adds	r3, #1
 80005e6:	d003      	beq.n	80005f0 <_fwalk_sglue+0x38>
 80005e8:	4629      	mov	r1, r5
 80005ea:	4638      	mov	r0, r7
 80005ec:	47c0      	blx	r8
 80005ee:	4306      	orrs	r6, r0
 80005f0:	3568      	adds	r5, #104	@ 0x68
 80005f2:	e7e9      	b.n	80005c8 <_fwalk_sglue+0x10>

080005f4 <_puts_r>:
 80005f4:	6a03      	ldr	r3, [r0, #32]
 80005f6:	b570      	push	{r4, r5, r6, lr}
 80005f8:	6884      	ldr	r4, [r0, #8]
 80005fa:	4605      	mov	r5, r0
 80005fc:	460e      	mov	r6, r1
 80005fe:	b90b      	cbnz	r3, 8000604 <_puts_r+0x10>
 8000600:	f7ff ffc2 	bl	8000588 <__sinit>
 8000604:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8000606:	07db      	lsls	r3, r3, #31
 8000608:	d405      	bmi.n	8000616 <_puts_r+0x22>
 800060a:	89a3      	ldrh	r3, [r4, #12]
 800060c:	0598      	lsls	r0, r3, #22
 800060e:	d402      	bmi.n	8000616 <_puts_r+0x22>
 8000610:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8000612:	f000 f99e 	bl	8000952 <__retarget_lock_acquire_recursive>
 8000616:	89a3      	ldrh	r3, [r4, #12]
 8000618:	0719      	lsls	r1, r3, #28
 800061a:	d502      	bpl.n	8000622 <_puts_r+0x2e>
 800061c:	6923      	ldr	r3, [r4, #16]
 800061e:	2b00      	cmp	r3, #0
 8000620:	d135      	bne.n	800068e <_puts_r+0x9a>
 8000622:	4621      	mov	r1, r4
 8000624:	4628      	mov	r0, r5
 8000626:	f000 f8c5 	bl	80007b4 <__swsetup_r>
 800062a:	b380      	cbz	r0, 800068e <_puts_r+0x9a>
 800062c:	f04f 35ff 	mov.w	r5, #4294967295
 8000630:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8000632:	07da      	lsls	r2, r3, #31
 8000634:	d405      	bmi.n	8000642 <_puts_r+0x4e>
 8000636:	89a3      	ldrh	r3, [r4, #12]
 8000638:	059b      	lsls	r3, r3, #22
 800063a:	d402      	bmi.n	8000642 <_puts_r+0x4e>
 800063c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800063e:	f000 f989 	bl	8000954 <__retarget_lock_release_recursive>
 8000642:	4628      	mov	r0, r5
 8000644:	bd70      	pop	{r4, r5, r6, pc}
 8000646:	2b00      	cmp	r3, #0
 8000648:	da04      	bge.n	8000654 <_puts_r+0x60>
 800064a:	69a2      	ldr	r2, [r4, #24]
 800064c:	429a      	cmp	r2, r3
 800064e:	dc17      	bgt.n	8000680 <_puts_r+0x8c>
 8000650:	290a      	cmp	r1, #10
 8000652:	d015      	beq.n	8000680 <_puts_r+0x8c>
 8000654:	6823      	ldr	r3, [r4, #0]
 8000656:	1c5a      	adds	r2, r3, #1
 8000658:	6022      	str	r2, [r4, #0]
 800065a:	7019      	strb	r1, [r3, #0]
 800065c:	68a3      	ldr	r3, [r4, #8]
 800065e:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8000662:	3b01      	subs	r3, #1
 8000664:	60a3      	str	r3, [r4, #8]
 8000666:	2900      	cmp	r1, #0
 8000668:	d1ed      	bne.n	8000646 <_puts_r+0x52>
 800066a:	2b00      	cmp	r3, #0
 800066c:	da11      	bge.n	8000692 <_puts_r+0x9e>
 800066e:	4622      	mov	r2, r4
 8000670:	210a      	movs	r1, #10
 8000672:	4628      	mov	r0, r5
 8000674:	f000 f85f 	bl	8000736 <__swbuf_r>
 8000678:	3001      	adds	r0, #1
 800067a:	d0d7      	beq.n	800062c <_puts_r+0x38>
 800067c:	250a      	movs	r5, #10
 800067e:	e7d7      	b.n	8000630 <_puts_r+0x3c>
 8000680:	4622      	mov	r2, r4
 8000682:	4628      	mov	r0, r5
 8000684:	f000 f857 	bl	8000736 <__swbuf_r>
 8000688:	3001      	adds	r0, #1
 800068a:	d1e7      	bne.n	800065c <_puts_r+0x68>
 800068c:	e7ce      	b.n	800062c <_puts_r+0x38>
 800068e:	3e01      	subs	r6, #1
 8000690:	e7e4      	b.n	800065c <_puts_r+0x68>
 8000692:	6823      	ldr	r3, [r4, #0]
 8000694:	1c5a      	adds	r2, r3, #1
 8000696:	6022      	str	r2, [r4, #0]
 8000698:	220a      	movs	r2, #10
 800069a:	701a      	strb	r2, [r3, #0]
 800069c:	e7ee      	b.n	800067c <_puts_r+0x88>
	...

080006a0 <puts>:
 80006a0:	4b02      	ldr	r3, [pc, #8]	@ (80006ac <puts+0xc>)
 80006a2:	4601      	mov	r1, r0
 80006a4:	6818      	ldr	r0, [r3, #0]
 80006a6:	f7ff bfa5 	b.w	80005f4 <_puts_r>
 80006aa:	bf00      	nop
 80006ac:	20000018 	.word	0x20000018

080006b0 <__sread>:
 80006b0:	b510      	push	{r4, lr}
 80006b2:	460c      	mov	r4, r1
 80006b4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80006b8:	f000 f8fc 	bl	80008b4 <_read_r>
 80006bc:	2800      	cmp	r0, #0
 80006be:	bfab      	itete	ge
 80006c0:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 80006c2:	89a3      	ldrhlt	r3, [r4, #12]
 80006c4:	181b      	addge	r3, r3, r0
 80006c6:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 80006ca:	bfac      	ite	ge
 80006cc:	6563      	strge	r3, [r4, #84]	@ 0x54
 80006ce:	81a3      	strhlt	r3, [r4, #12]
 80006d0:	bd10      	pop	{r4, pc}

080006d2 <__swrite>:
 80006d2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80006d6:	461f      	mov	r7, r3
 80006d8:	898b      	ldrh	r3, [r1, #12]
 80006da:	05db      	lsls	r3, r3, #23
 80006dc:	4605      	mov	r5, r0
 80006de:	460c      	mov	r4, r1
 80006e0:	4616      	mov	r6, r2
 80006e2:	d505      	bpl.n	80006f0 <__swrite+0x1e>
 80006e4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80006e8:	2302      	movs	r3, #2
 80006ea:	2200      	movs	r2, #0
 80006ec:	f000 f8d0 	bl	8000890 <_lseek_r>
 80006f0:	89a3      	ldrh	r3, [r4, #12]
 80006f2:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80006f6:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 80006fa:	81a3      	strh	r3, [r4, #12]
 80006fc:	4632      	mov	r2, r6
 80006fe:	463b      	mov	r3, r7
 8000700:	4628      	mov	r0, r5
 8000702:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000706:	f000 b8e7 	b.w	80008d8 <_write_r>

0800070a <__sseek>:
 800070a:	b510      	push	{r4, lr}
 800070c:	460c      	mov	r4, r1
 800070e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000712:	f000 f8bd 	bl	8000890 <_lseek_r>
 8000716:	1c43      	adds	r3, r0, #1
 8000718:	89a3      	ldrh	r3, [r4, #12]
 800071a:	bf15      	itete	ne
 800071c:	6560      	strne	r0, [r4, #84]	@ 0x54
 800071e:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8000722:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8000726:	81a3      	strheq	r3, [r4, #12]
 8000728:	bf18      	it	ne
 800072a:	81a3      	strhne	r3, [r4, #12]
 800072c:	bd10      	pop	{r4, pc}

0800072e <__sclose>:
 800072e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000732:	f000 b89d 	b.w	8000870 <_close_r>

08000736 <__swbuf_r>:
 8000736:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000738:	460e      	mov	r6, r1
 800073a:	4614      	mov	r4, r2
 800073c:	4605      	mov	r5, r0
 800073e:	b118      	cbz	r0, 8000748 <__swbuf_r+0x12>
 8000740:	6a03      	ldr	r3, [r0, #32]
 8000742:	b90b      	cbnz	r3, 8000748 <__swbuf_r+0x12>
 8000744:	f7ff ff20 	bl	8000588 <__sinit>
 8000748:	69a3      	ldr	r3, [r4, #24]
 800074a:	60a3      	str	r3, [r4, #8]
 800074c:	89a3      	ldrh	r3, [r4, #12]
 800074e:	071a      	lsls	r2, r3, #28
 8000750:	d501      	bpl.n	8000756 <__swbuf_r+0x20>
 8000752:	6923      	ldr	r3, [r4, #16]
 8000754:	b943      	cbnz	r3, 8000768 <__swbuf_r+0x32>
 8000756:	4621      	mov	r1, r4
 8000758:	4628      	mov	r0, r5
 800075a:	f000 f82b 	bl	80007b4 <__swsetup_r>
 800075e:	b118      	cbz	r0, 8000768 <__swbuf_r+0x32>
 8000760:	f04f 37ff 	mov.w	r7, #4294967295
 8000764:	4638      	mov	r0, r7
 8000766:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000768:	6823      	ldr	r3, [r4, #0]
 800076a:	6922      	ldr	r2, [r4, #16]
 800076c:	1a98      	subs	r0, r3, r2
 800076e:	6963      	ldr	r3, [r4, #20]
 8000770:	b2f6      	uxtb	r6, r6
 8000772:	4283      	cmp	r3, r0
 8000774:	4637      	mov	r7, r6
 8000776:	dc05      	bgt.n	8000784 <__swbuf_r+0x4e>
 8000778:	4621      	mov	r1, r4
 800077a:	4628      	mov	r0, r5
 800077c:	f000 fa68 	bl	8000c50 <_fflush_r>
 8000780:	2800      	cmp	r0, #0
 8000782:	d1ed      	bne.n	8000760 <__swbuf_r+0x2a>
 8000784:	68a3      	ldr	r3, [r4, #8]
 8000786:	3b01      	subs	r3, #1
 8000788:	60a3      	str	r3, [r4, #8]
 800078a:	6823      	ldr	r3, [r4, #0]
 800078c:	1c5a      	adds	r2, r3, #1
 800078e:	6022      	str	r2, [r4, #0]
 8000790:	701e      	strb	r6, [r3, #0]
 8000792:	6962      	ldr	r2, [r4, #20]
 8000794:	1c43      	adds	r3, r0, #1
 8000796:	429a      	cmp	r2, r3
 8000798:	d004      	beq.n	80007a4 <__swbuf_r+0x6e>
 800079a:	89a3      	ldrh	r3, [r4, #12]
 800079c:	07db      	lsls	r3, r3, #31
 800079e:	d5e1      	bpl.n	8000764 <__swbuf_r+0x2e>
 80007a0:	2e0a      	cmp	r6, #10
 80007a2:	d1df      	bne.n	8000764 <__swbuf_r+0x2e>
 80007a4:	4621      	mov	r1, r4
 80007a6:	4628      	mov	r0, r5
 80007a8:	f000 fa52 	bl	8000c50 <_fflush_r>
 80007ac:	2800      	cmp	r0, #0
 80007ae:	d0d9      	beq.n	8000764 <__swbuf_r+0x2e>
 80007b0:	e7d6      	b.n	8000760 <__swbuf_r+0x2a>
	...

080007b4 <__swsetup_r>:
 80007b4:	b538      	push	{r3, r4, r5, lr}
 80007b6:	4b29      	ldr	r3, [pc, #164]	@ (800085c <__swsetup_r+0xa8>)
 80007b8:	4605      	mov	r5, r0
 80007ba:	6818      	ldr	r0, [r3, #0]
 80007bc:	460c      	mov	r4, r1
 80007be:	b118      	cbz	r0, 80007c8 <__swsetup_r+0x14>
 80007c0:	6a03      	ldr	r3, [r0, #32]
 80007c2:	b90b      	cbnz	r3, 80007c8 <__swsetup_r+0x14>
 80007c4:	f7ff fee0 	bl	8000588 <__sinit>
 80007c8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80007cc:	0719      	lsls	r1, r3, #28
 80007ce:	d422      	bmi.n	8000816 <__swsetup_r+0x62>
 80007d0:	06da      	lsls	r2, r3, #27
 80007d2:	d407      	bmi.n	80007e4 <__swsetup_r+0x30>
 80007d4:	2209      	movs	r2, #9
 80007d6:	602a      	str	r2, [r5, #0]
 80007d8:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80007dc:	81a3      	strh	r3, [r4, #12]
 80007de:	f04f 30ff 	mov.w	r0, #4294967295
 80007e2:	e033      	b.n	800084c <__swsetup_r+0x98>
 80007e4:	0758      	lsls	r0, r3, #29
 80007e6:	d512      	bpl.n	800080e <__swsetup_r+0x5a>
 80007e8:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80007ea:	b141      	cbz	r1, 80007fe <__swsetup_r+0x4a>
 80007ec:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80007f0:	4299      	cmp	r1, r3
 80007f2:	d002      	beq.n	80007fa <__swsetup_r+0x46>
 80007f4:	4628      	mov	r0, r5
 80007f6:	f000 f8af 	bl	8000958 <_free_r>
 80007fa:	2300      	movs	r3, #0
 80007fc:	6363      	str	r3, [r4, #52]	@ 0x34
 80007fe:	89a3      	ldrh	r3, [r4, #12]
 8000800:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8000804:	81a3      	strh	r3, [r4, #12]
 8000806:	2300      	movs	r3, #0
 8000808:	6063      	str	r3, [r4, #4]
 800080a:	6923      	ldr	r3, [r4, #16]
 800080c:	6023      	str	r3, [r4, #0]
 800080e:	89a3      	ldrh	r3, [r4, #12]
 8000810:	f043 0308 	orr.w	r3, r3, #8
 8000814:	81a3      	strh	r3, [r4, #12]
 8000816:	6923      	ldr	r3, [r4, #16]
 8000818:	b94b      	cbnz	r3, 800082e <__swsetup_r+0x7a>
 800081a:	89a3      	ldrh	r3, [r4, #12]
 800081c:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8000820:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8000824:	d003      	beq.n	800082e <__swsetup_r+0x7a>
 8000826:	4621      	mov	r1, r4
 8000828:	4628      	mov	r0, r5
 800082a:	f000 fa5f 	bl	8000cec <__smakebuf_r>
 800082e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000832:	f013 0201 	ands.w	r2, r3, #1
 8000836:	d00a      	beq.n	800084e <__swsetup_r+0x9a>
 8000838:	2200      	movs	r2, #0
 800083a:	60a2      	str	r2, [r4, #8]
 800083c:	6962      	ldr	r2, [r4, #20]
 800083e:	4252      	negs	r2, r2
 8000840:	61a2      	str	r2, [r4, #24]
 8000842:	6922      	ldr	r2, [r4, #16]
 8000844:	b942      	cbnz	r2, 8000858 <__swsetup_r+0xa4>
 8000846:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 800084a:	d1c5      	bne.n	80007d8 <__swsetup_r+0x24>
 800084c:	bd38      	pop	{r3, r4, r5, pc}
 800084e:	0799      	lsls	r1, r3, #30
 8000850:	bf58      	it	pl
 8000852:	6962      	ldrpl	r2, [r4, #20]
 8000854:	60a2      	str	r2, [r4, #8]
 8000856:	e7f4      	b.n	8000842 <__swsetup_r+0x8e>
 8000858:	2000      	movs	r0, #0
 800085a:	e7f7      	b.n	800084c <__swsetup_r+0x98>
 800085c:	20000018 	.word	0x20000018

08000860 <memset>:
 8000860:	4402      	add	r2, r0
 8000862:	4603      	mov	r3, r0
 8000864:	4293      	cmp	r3, r2
 8000866:	d100      	bne.n	800086a <memset+0xa>
 8000868:	4770      	bx	lr
 800086a:	f803 1b01 	strb.w	r1, [r3], #1
 800086e:	e7f9      	b.n	8000864 <memset+0x4>

08000870 <_close_r>:
 8000870:	b538      	push	{r3, r4, r5, lr}
 8000872:	4d06      	ldr	r5, [pc, #24]	@ (800088c <_close_r+0x1c>)
 8000874:	2300      	movs	r3, #0
 8000876:	4604      	mov	r4, r0
 8000878:	4608      	mov	r0, r1
 800087a:	602b      	str	r3, [r5, #0]
 800087c:	f7ff fd63 	bl	8000346 <_close>
 8000880:	1c43      	adds	r3, r0, #1
 8000882:	d102      	bne.n	800088a <_close_r+0x1a>
 8000884:	682b      	ldr	r3, [r5, #0]
 8000886:	b103      	cbz	r3, 800088a <_close_r+0x1a>
 8000888:	6023      	str	r3, [r4, #0]
 800088a:	bd38      	pop	{r3, r4, r5, pc}
 800088c:	200001c4 	.word	0x200001c4

08000890 <_lseek_r>:
 8000890:	b538      	push	{r3, r4, r5, lr}
 8000892:	4d07      	ldr	r5, [pc, #28]	@ (80008b0 <_lseek_r+0x20>)
 8000894:	4604      	mov	r4, r0
 8000896:	4608      	mov	r0, r1
 8000898:	4611      	mov	r1, r2
 800089a:	2200      	movs	r2, #0
 800089c:	602a      	str	r2, [r5, #0]
 800089e:	461a      	mov	r2, r3
 80008a0:	f7ff fd78 	bl	8000394 <_lseek>
 80008a4:	1c43      	adds	r3, r0, #1
 80008a6:	d102      	bne.n	80008ae <_lseek_r+0x1e>
 80008a8:	682b      	ldr	r3, [r5, #0]
 80008aa:	b103      	cbz	r3, 80008ae <_lseek_r+0x1e>
 80008ac:	6023      	str	r3, [r4, #0]
 80008ae:	bd38      	pop	{r3, r4, r5, pc}
 80008b0:	200001c4 	.word	0x200001c4

080008b4 <_read_r>:
 80008b4:	b538      	push	{r3, r4, r5, lr}
 80008b6:	4d07      	ldr	r5, [pc, #28]	@ (80008d4 <_read_r+0x20>)
 80008b8:	4604      	mov	r4, r0
 80008ba:	4608      	mov	r0, r1
 80008bc:	4611      	mov	r1, r2
 80008be:	2200      	movs	r2, #0
 80008c0:	602a      	str	r2, [r5, #0]
 80008c2:	461a      	mov	r2, r3
 80008c4:	f7ff fd06 	bl	80002d4 <_read>
 80008c8:	1c43      	adds	r3, r0, #1
 80008ca:	d102      	bne.n	80008d2 <_read_r+0x1e>
 80008cc:	682b      	ldr	r3, [r5, #0]
 80008ce:	b103      	cbz	r3, 80008d2 <_read_r+0x1e>
 80008d0:	6023      	str	r3, [r4, #0]
 80008d2:	bd38      	pop	{r3, r4, r5, pc}
 80008d4:	200001c4 	.word	0x200001c4

080008d8 <_write_r>:
 80008d8:	b538      	push	{r3, r4, r5, lr}
 80008da:	4d07      	ldr	r5, [pc, #28]	@ (80008f8 <_write_r+0x20>)
 80008dc:	4604      	mov	r4, r0
 80008de:	4608      	mov	r0, r1
 80008e0:	4611      	mov	r1, r2
 80008e2:	2200      	movs	r2, #0
 80008e4:	602a      	str	r2, [r5, #0]
 80008e6:	461a      	mov	r2, r3
 80008e8:	f7ff fd11 	bl	800030e <_write>
 80008ec:	1c43      	adds	r3, r0, #1
 80008ee:	d102      	bne.n	80008f6 <_write_r+0x1e>
 80008f0:	682b      	ldr	r3, [r5, #0]
 80008f2:	b103      	cbz	r3, 80008f6 <_write_r+0x1e>
 80008f4:	6023      	str	r3, [r4, #0]
 80008f6:	bd38      	pop	{r3, r4, r5, pc}
 80008f8:	200001c4 	.word	0x200001c4

080008fc <__errno>:
 80008fc:	4b01      	ldr	r3, [pc, #4]	@ (8000904 <__errno+0x8>)
 80008fe:	6818      	ldr	r0, [r3, #0]
 8000900:	4770      	bx	lr
 8000902:	bf00      	nop
 8000904:	20000018 	.word	0x20000018

08000908 <__libc_init_array>:
 8000908:	b570      	push	{r4, r5, r6, lr}
 800090a:	4d0d      	ldr	r5, [pc, #52]	@ (8000940 <__libc_init_array+0x38>)
 800090c:	4c0d      	ldr	r4, [pc, #52]	@ (8000944 <__libc_init_array+0x3c>)
 800090e:	1b64      	subs	r4, r4, r5
 8000910:	10a4      	asrs	r4, r4, #2
 8000912:	2600      	movs	r6, #0
 8000914:	42a6      	cmp	r6, r4
 8000916:	d109      	bne.n	800092c <__libc_init_array+0x24>
 8000918:	4d0b      	ldr	r5, [pc, #44]	@ (8000948 <__libc_init_array+0x40>)
 800091a:	4c0c      	ldr	r4, [pc, #48]	@ (800094c <__libc_init_array+0x44>)
 800091c:	f000 fa54 	bl	8000dc8 <_init>
 8000920:	1b64      	subs	r4, r4, r5
 8000922:	10a4      	asrs	r4, r4, #2
 8000924:	2600      	movs	r6, #0
 8000926:	42a6      	cmp	r6, r4
 8000928:	d105      	bne.n	8000936 <__libc_init_array+0x2e>
 800092a:	bd70      	pop	{r4, r5, r6, pc}
 800092c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000930:	4798      	blx	r3
 8000932:	3601      	adds	r6, #1
 8000934:	e7ee      	b.n	8000914 <__libc_init_array+0xc>
 8000936:	f855 3b04 	ldr.w	r3, [r5], #4
 800093a:	4798      	blx	r3
 800093c:	3601      	adds	r6, #1
 800093e:	e7f2      	b.n	8000926 <__libc_init_array+0x1e>
 8000940:	08000e08 	.word	0x08000e08
 8000944:	08000e08 	.word	0x08000e08
 8000948:	08000e08 	.word	0x08000e08
 800094c:	08000e0c 	.word	0x08000e0c

08000950 <__retarget_lock_init_recursive>:
 8000950:	4770      	bx	lr

08000952 <__retarget_lock_acquire_recursive>:
 8000952:	4770      	bx	lr

08000954 <__retarget_lock_release_recursive>:
 8000954:	4770      	bx	lr
	...

08000958 <_free_r>:
 8000958:	b538      	push	{r3, r4, r5, lr}
 800095a:	4605      	mov	r5, r0
 800095c:	2900      	cmp	r1, #0
 800095e:	d041      	beq.n	80009e4 <_free_r+0x8c>
 8000960:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000964:	1f0c      	subs	r4, r1, #4
 8000966:	2b00      	cmp	r3, #0
 8000968:	bfb8      	it	lt
 800096a:	18e4      	addlt	r4, r4, r3
 800096c:	f000 f8e0 	bl	8000b30 <__malloc_lock>
 8000970:	4a1d      	ldr	r2, [pc, #116]	@ (80009e8 <_free_r+0x90>)
 8000972:	6813      	ldr	r3, [r2, #0]
 8000974:	b933      	cbnz	r3, 8000984 <_free_r+0x2c>
 8000976:	6063      	str	r3, [r4, #4]
 8000978:	6014      	str	r4, [r2, #0]
 800097a:	4628      	mov	r0, r5
 800097c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000980:	f000 b8dc 	b.w	8000b3c <__malloc_unlock>
 8000984:	42a3      	cmp	r3, r4
 8000986:	d908      	bls.n	800099a <_free_r+0x42>
 8000988:	6820      	ldr	r0, [r4, #0]
 800098a:	1821      	adds	r1, r4, r0
 800098c:	428b      	cmp	r3, r1
 800098e:	bf01      	itttt	eq
 8000990:	6819      	ldreq	r1, [r3, #0]
 8000992:	685b      	ldreq	r3, [r3, #4]
 8000994:	1809      	addeq	r1, r1, r0
 8000996:	6021      	streq	r1, [r4, #0]
 8000998:	e7ed      	b.n	8000976 <_free_r+0x1e>
 800099a:	461a      	mov	r2, r3
 800099c:	685b      	ldr	r3, [r3, #4]
 800099e:	b10b      	cbz	r3, 80009a4 <_free_r+0x4c>
 80009a0:	42a3      	cmp	r3, r4
 80009a2:	d9fa      	bls.n	800099a <_free_r+0x42>
 80009a4:	6811      	ldr	r1, [r2, #0]
 80009a6:	1850      	adds	r0, r2, r1
 80009a8:	42a0      	cmp	r0, r4
 80009aa:	d10b      	bne.n	80009c4 <_free_r+0x6c>
 80009ac:	6820      	ldr	r0, [r4, #0]
 80009ae:	4401      	add	r1, r0
 80009b0:	1850      	adds	r0, r2, r1
 80009b2:	4283      	cmp	r3, r0
 80009b4:	6011      	str	r1, [r2, #0]
 80009b6:	d1e0      	bne.n	800097a <_free_r+0x22>
 80009b8:	6818      	ldr	r0, [r3, #0]
 80009ba:	685b      	ldr	r3, [r3, #4]
 80009bc:	6053      	str	r3, [r2, #4]
 80009be:	4408      	add	r0, r1
 80009c0:	6010      	str	r0, [r2, #0]
 80009c2:	e7da      	b.n	800097a <_free_r+0x22>
 80009c4:	d902      	bls.n	80009cc <_free_r+0x74>
 80009c6:	230c      	movs	r3, #12
 80009c8:	602b      	str	r3, [r5, #0]
 80009ca:	e7d6      	b.n	800097a <_free_r+0x22>
 80009cc:	6820      	ldr	r0, [r4, #0]
 80009ce:	1821      	adds	r1, r4, r0
 80009d0:	428b      	cmp	r3, r1
 80009d2:	bf04      	itt	eq
 80009d4:	6819      	ldreq	r1, [r3, #0]
 80009d6:	685b      	ldreq	r3, [r3, #4]
 80009d8:	6063      	str	r3, [r4, #4]
 80009da:	bf04      	itt	eq
 80009dc:	1809      	addeq	r1, r1, r0
 80009de:	6021      	streq	r1, [r4, #0]
 80009e0:	6054      	str	r4, [r2, #4]
 80009e2:	e7ca      	b.n	800097a <_free_r+0x22>
 80009e4:	bd38      	pop	{r3, r4, r5, pc}
 80009e6:	bf00      	nop
 80009e8:	200001d0 	.word	0x200001d0

080009ec <sbrk_aligned>:
 80009ec:	b570      	push	{r4, r5, r6, lr}
 80009ee:	4e0f      	ldr	r6, [pc, #60]	@ (8000a2c <sbrk_aligned+0x40>)
 80009f0:	460c      	mov	r4, r1
 80009f2:	6831      	ldr	r1, [r6, #0]
 80009f4:	4605      	mov	r5, r0
 80009f6:	b911      	cbnz	r1, 80009fe <sbrk_aligned+0x12>
 80009f8:	f000 f9d6 	bl	8000da8 <_sbrk_r>
 80009fc:	6030      	str	r0, [r6, #0]
 80009fe:	4621      	mov	r1, r4
 8000a00:	4628      	mov	r0, r5
 8000a02:	f000 f9d1 	bl	8000da8 <_sbrk_r>
 8000a06:	1c43      	adds	r3, r0, #1
 8000a08:	d103      	bne.n	8000a12 <sbrk_aligned+0x26>
 8000a0a:	f04f 34ff 	mov.w	r4, #4294967295
 8000a0e:	4620      	mov	r0, r4
 8000a10:	bd70      	pop	{r4, r5, r6, pc}
 8000a12:	1cc4      	adds	r4, r0, #3
 8000a14:	f024 0403 	bic.w	r4, r4, #3
 8000a18:	42a0      	cmp	r0, r4
 8000a1a:	d0f8      	beq.n	8000a0e <sbrk_aligned+0x22>
 8000a1c:	1a21      	subs	r1, r4, r0
 8000a1e:	4628      	mov	r0, r5
 8000a20:	f000 f9c2 	bl	8000da8 <_sbrk_r>
 8000a24:	3001      	adds	r0, #1
 8000a26:	d1f2      	bne.n	8000a0e <sbrk_aligned+0x22>
 8000a28:	e7ef      	b.n	8000a0a <sbrk_aligned+0x1e>
 8000a2a:	bf00      	nop
 8000a2c:	200001cc 	.word	0x200001cc

08000a30 <_malloc_r>:
 8000a30:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000a34:	1ccd      	adds	r5, r1, #3
 8000a36:	f025 0503 	bic.w	r5, r5, #3
 8000a3a:	3508      	adds	r5, #8
 8000a3c:	2d0c      	cmp	r5, #12
 8000a3e:	bf38      	it	cc
 8000a40:	250c      	movcc	r5, #12
 8000a42:	2d00      	cmp	r5, #0
 8000a44:	4606      	mov	r6, r0
 8000a46:	db01      	blt.n	8000a4c <_malloc_r+0x1c>
 8000a48:	42a9      	cmp	r1, r5
 8000a4a:	d904      	bls.n	8000a56 <_malloc_r+0x26>
 8000a4c:	230c      	movs	r3, #12
 8000a4e:	6033      	str	r3, [r6, #0]
 8000a50:	2000      	movs	r0, #0
 8000a52:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000a56:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8000b2c <_malloc_r+0xfc>
 8000a5a:	f000 f869 	bl	8000b30 <__malloc_lock>
 8000a5e:	f8d8 3000 	ldr.w	r3, [r8]
 8000a62:	461c      	mov	r4, r3
 8000a64:	bb44      	cbnz	r4, 8000ab8 <_malloc_r+0x88>
 8000a66:	4629      	mov	r1, r5
 8000a68:	4630      	mov	r0, r6
 8000a6a:	f7ff ffbf 	bl	80009ec <sbrk_aligned>
 8000a6e:	1c43      	adds	r3, r0, #1
 8000a70:	4604      	mov	r4, r0
 8000a72:	d158      	bne.n	8000b26 <_malloc_r+0xf6>
 8000a74:	f8d8 4000 	ldr.w	r4, [r8]
 8000a78:	4627      	mov	r7, r4
 8000a7a:	2f00      	cmp	r7, #0
 8000a7c:	d143      	bne.n	8000b06 <_malloc_r+0xd6>
 8000a7e:	2c00      	cmp	r4, #0
 8000a80:	d04b      	beq.n	8000b1a <_malloc_r+0xea>
 8000a82:	6823      	ldr	r3, [r4, #0]
 8000a84:	4639      	mov	r1, r7
 8000a86:	4630      	mov	r0, r6
 8000a88:	eb04 0903 	add.w	r9, r4, r3
 8000a8c:	f000 f98c 	bl	8000da8 <_sbrk_r>
 8000a90:	4581      	cmp	r9, r0
 8000a92:	d142      	bne.n	8000b1a <_malloc_r+0xea>
 8000a94:	6821      	ldr	r1, [r4, #0]
 8000a96:	1a6d      	subs	r5, r5, r1
 8000a98:	4629      	mov	r1, r5
 8000a9a:	4630      	mov	r0, r6
 8000a9c:	f7ff ffa6 	bl	80009ec <sbrk_aligned>
 8000aa0:	3001      	adds	r0, #1
 8000aa2:	d03a      	beq.n	8000b1a <_malloc_r+0xea>
 8000aa4:	6823      	ldr	r3, [r4, #0]
 8000aa6:	442b      	add	r3, r5
 8000aa8:	6023      	str	r3, [r4, #0]
 8000aaa:	f8d8 3000 	ldr.w	r3, [r8]
 8000aae:	685a      	ldr	r2, [r3, #4]
 8000ab0:	bb62      	cbnz	r2, 8000b0c <_malloc_r+0xdc>
 8000ab2:	f8c8 7000 	str.w	r7, [r8]
 8000ab6:	e00f      	b.n	8000ad8 <_malloc_r+0xa8>
 8000ab8:	6822      	ldr	r2, [r4, #0]
 8000aba:	1b52      	subs	r2, r2, r5
 8000abc:	d420      	bmi.n	8000b00 <_malloc_r+0xd0>
 8000abe:	2a0b      	cmp	r2, #11
 8000ac0:	d917      	bls.n	8000af2 <_malloc_r+0xc2>
 8000ac2:	1961      	adds	r1, r4, r5
 8000ac4:	42a3      	cmp	r3, r4
 8000ac6:	6025      	str	r5, [r4, #0]
 8000ac8:	bf18      	it	ne
 8000aca:	6059      	strne	r1, [r3, #4]
 8000acc:	6863      	ldr	r3, [r4, #4]
 8000ace:	bf08      	it	eq
 8000ad0:	f8c8 1000 	streq.w	r1, [r8]
 8000ad4:	5162      	str	r2, [r4, r5]
 8000ad6:	604b      	str	r3, [r1, #4]
 8000ad8:	4630      	mov	r0, r6
 8000ada:	f000 f82f 	bl	8000b3c <__malloc_unlock>
 8000ade:	f104 000b 	add.w	r0, r4, #11
 8000ae2:	1d23      	adds	r3, r4, #4
 8000ae4:	f020 0007 	bic.w	r0, r0, #7
 8000ae8:	1ac2      	subs	r2, r0, r3
 8000aea:	bf1c      	itt	ne
 8000aec:	1a1b      	subne	r3, r3, r0
 8000aee:	50a3      	strne	r3, [r4, r2]
 8000af0:	e7af      	b.n	8000a52 <_malloc_r+0x22>
 8000af2:	6862      	ldr	r2, [r4, #4]
 8000af4:	42a3      	cmp	r3, r4
 8000af6:	bf0c      	ite	eq
 8000af8:	f8c8 2000 	streq.w	r2, [r8]
 8000afc:	605a      	strne	r2, [r3, #4]
 8000afe:	e7eb      	b.n	8000ad8 <_malloc_r+0xa8>
 8000b00:	4623      	mov	r3, r4
 8000b02:	6864      	ldr	r4, [r4, #4]
 8000b04:	e7ae      	b.n	8000a64 <_malloc_r+0x34>
 8000b06:	463c      	mov	r4, r7
 8000b08:	687f      	ldr	r7, [r7, #4]
 8000b0a:	e7b6      	b.n	8000a7a <_malloc_r+0x4a>
 8000b0c:	461a      	mov	r2, r3
 8000b0e:	685b      	ldr	r3, [r3, #4]
 8000b10:	42a3      	cmp	r3, r4
 8000b12:	d1fb      	bne.n	8000b0c <_malloc_r+0xdc>
 8000b14:	2300      	movs	r3, #0
 8000b16:	6053      	str	r3, [r2, #4]
 8000b18:	e7de      	b.n	8000ad8 <_malloc_r+0xa8>
 8000b1a:	230c      	movs	r3, #12
 8000b1c:	6033      	str	r3, [r6, #0]
 8000b1e:	4630      	mov	r0, r6
 8000b20:	f000 f80c 	bl	8000b3c <__malloc_unlock>
 8000b24:	e794      	b.n	8000a50 <_malloc_r+0x20>
 8000b26:	6005      	str	r5, [r0, #0]
 8000b28:	e7d6      	b.n	8000ad8 <_malloc_r+0xa8>
 8000b2a:	bf00      	nop
 8000b2c:	200001d0 	.word	0x200001d0

08000b30 <__malloc_lock>:
 8000b30:	4801      	ldr	r0, [pc, #4]	@ (8000b38 <__malloc_lock+0x8>)
 8000b32:	f7ff bf0e 	b.w	8000952 <__retarget_lock_acquire_recursive>
 8000b36:	bf00      	nop
 8000b38:	200001c8 	.word	0x200001c8

08000b3c <__malloc_unlock>:
 8000b3c:	4801      	ldr	r0, [pc, #4]	@ (8000b44 <__malloc_unlock+0x8>)
 8000b3e:	f7ff bf09 	b.w	8000954 <__retarget_lock_release_recursive>
 8000b42:	bf00      	nop
 8000b44:	200001c8 	.word	0x200001c8

08000b48 <__sflush_r>:
 8000b48:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8000b4c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000b50:	0716      	lsls	r6, r2, #28
 8000b52:	4605      	mov	r5, r0
 8000b54:	460c      	mov	r4, r1
 8000b56:	d454      	bmi.n	8000c02 <__sflush_r+0xba>
 8000b58:	684b      	ldr	r3, [r1, #4]
 8000b5a:	2b00      	cmp	r3, #0
 8000b5c:	dc02      	bgt.n	8000b64 <__sflush_r+0x1c>
 8000b5e:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8000b60:	2b00      	cmp	r3, #0
 8000b62:	dd48      	ble.n	8000bf6 <__sflush_r+0xae>
 8000b64:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8000b66:	2e00      	cmp	r6, #0
 8000b68:	d045      	beq.n	8000bf6 <__sflush_r+0xae>
 8000b6a:	2300      	movs	r3, #0
 8000b6c:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8000b70:	682f      	ldr	r7, [r5, #0]
 8000b72:	6a21      	ldr	r1, [r4, #32]
 8000b74:	602b      	str	r3, [r5, #0]
 8000b76:	d030      	beq.n	8000bda <__sflush_r+0x92>
 8000b78:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8000b7a:	89a3      	ldrh	r3, [r4, #12]
 8000b7c:	0759      	lsls	r1, r3, #29
 8000b7e:	d505      	bpl.n	8000b8c <__sflush_r+0x44>
 8000b80:	6863      	ldr	r3, [r4, #4]
 8000b82:	1ad2      	subs	r2, r2, r3
 8000b84:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8000b86:	b10b      	cbz	r3, 8000b8c <__sflush_r+0x44>
 8000b88:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8000b8a:	1ad2      	subs	r2, r2, r3
 8000b8c:	2300      	movs	r3, #0
 8000b8e:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8000b90:	6a21      	ldr	r1, [r4, #32]
 8000b92:	4628      	mov	r0, r5
 8000b94:	47b0      	blx	r6
 8000b96:	1c43      	adds	r3, r0, #1
 8000b98:	89a3      	ldrh	r3, [r4, #12]
 8000b9a:	d106      	bne.n	8000baa <__sflush_r+0x62>
 8000b9c:	6829      	ldr	r1, [r5, #0]
 8000b9e:	291d      	cmp	r1, #29
 8000ba0:	d82b      	bhi.n	8000bfa <__sflush_r+0xb2>
 8000ba2:	4a2a      	ldr	r2, [pc, #168]	@ (8000c4c <__sflush_r+0x104>)
 8000ba4:	410a      	asrs	r2, r1
 8000ba6:	07d6      	lsls	r6, r2, #31
 8000ba8:	d427      	bmi.n	8000bfa <__sflush_r+0xb2>
 8000baa:	2200      	movs	r2, #0
 8000bac:	6062      	str	r2, [r4, #4]
 8000bae:	04d9      	lsls	r1, r3, #19
 8000bb0:	6922      	ldr	r2, [r4, #16]
 8000bb2:	6022      	str	r2, [r4, #0]
 8000bb4:	d504      	bpl.n	8000bc0 <__sflush_r+0x78>
 8000bb6:	1c42      	adds	r2, r0, #1
 8000bb8:	d101      	bne.n	8000bbe <__sflush_r+0x76>
 8000bba:	682b      	ldr	r3, [r5, #0]
 8000bbc:	b903      	cbnz	r3, 8000bc0 <__sflush_r+0x78>
 8000bbe:	6560      	str	r0, [r4, #84]	@ 0x54
 8000bc0:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8000bc2:	602f      	str	r7, [r5, #0]
 8000bc4:	b1b9      	cbz	r1, 8000bf6 <__sflush_r+0xae>
 8000bc6:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8000bca:	4299      	cmp	r1, r3
 8000bcc:	d002      	beq.n	8000bd4 <__sflush_r+0x8c>
 8000bce:	4628      	mov	r0, r5
 8000bd0:	f7ff fec2 	bl	8000958 <_free_r>
 8000bd4:	2300      	movs	r3, #0
 8000bd6:	6363      	str	r3, [r4, #52]	@ 0x34
 8000bd8:	e00d      	b.n	8000bf6 <__sflush_r+0xae>
 8000bda:	2301      	movs	r3, #1
 8000bdc:	4628      	mov	r0, r5
 8000bde:	47b0      	blx	r6
 8000be0:	4602      	mov	r2, r0
 8000be2:	1c50      	adds	r0, r2, #1
 8000be4:	d1c9      	bne.n	8000b7a <__sflush_r+0x32>
 8000be6:	682b      	ldr	r3, [r5, #0]
 8000be8:	2b00      	cmp	r3, #0
 8000bea:	d0c6      	beq.n	8000b7a <__sflush_r+0x32>
 8000bec:	2b1d      	cmp	r3, #29
 8000bee:	d001      	beq.n	8000bf4 <__sflush_r+0xac>
 8000bf0:	2b16      	cmp	r3, #22
 8000bf2:	d11e      	bne.n	8000c32 <__sflush_r+0xea>
 8000bf4:	602f      	str	r7, [r5, #0]
 8000bf6:	2000      	movs	r0, #0
 8000bf8:	e022      	b.n	8000c40 <__sflush_r+0xf8>
 8000bfa:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000bfe:	b21b      	sxth	r3, r3
 8000c00:	e01b      	b.n	8000c3a <__sflush_r+0xf2>
 8000c02:	690f      	ldr	r7, [r1, #16]
 8000c04:	2f00      	cmp	r7, #0
 8000c06:	d0f6      	beq.n	8000bf6 <__sflush_r+0xae>
 8000c08:	0793      	lsls	r3, r2, #30
 8000c0a:	680e      	ldr	r6, [r1, #0]
 8000c0c:	bf08      	it	eq
 8000c0e:	694b      	ldreq	r3, [r1, #20]
 8000c10:	600f      	str	r7, [r1, #0]
 8000c12:	bf18      	it	ne
 8000c14:	2300      	movne	r3, #0
 8000c16:	eba6 0807 	sub.w	r8, r6, r7
 8000c1a:	608b      	str	r3, [r1, #8]
 8000c1c:	f1b8 0f00 	cmp.w	r8, #0
 8000c20:	dde9      	ble.n	8000bf6 <__sflush_r+0xae>
 8000c22:	6a21      	ldr	r1, [r4, #32]
 8000c24:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 8000c26:	4643      	mov	r3, r8
 8000c28:	463a      	mov	r2, r7
 8000c2a:	4628      	mov	r0, r5
 8000c2c:	47b0      	blx	r6
 8000c2e:	2800      	cmp	r0, #0
 8000c30:	dc08      	bgt.n	8000c44 <__sflush_r+0xfc>
 8000c32:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000c36:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000c3a:	81a3      	strh	r3, [r4, #12]
 8000c3c:	f04f 30ff 	mov.w	r0, #4294967295
 8000c40:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000c44:	4407      	add	r7, r0
 8000c46:	eba8 0800 	sub.w	r8, r8, r0
 8000c4a:	e7e7      	b.n	8000c1c <__sflush_r+0xd4>
 8000c4c:	dfbffffe 	.word	0xdfbffffe

08000c50 <_fflush_r>:
 8000c50:	b538      	push	{r3, r4, r5, lr}
 8000c52:	690b      	ldr	r3, [r1, #16]
 8000c54:	4605      	mov	r5, r0
 8000c56:	460c      	mov	r4, r1
 8000c58:	b913      	cbnz	r3, 8000c60 <_fflush_r+0x10>
 8000c5a:	2500      	movs	r5, #0
 8000c5c:	4628      	mov	r0, r5
 8000c5e:	bd38      	pop	{r3, r4, r5, pc}
 8000c60:	b118      	cbz	r0, 8000c6a <_fflush_r+0x1a>
 8000c62:	6a03      	ldr	r3, [r0, #32]
 8000c64:	b90b      	cbnz	r3, 8000c6a <_fflush_r+0x1a>
 8000c66:	f7ff fc8f 	bl	8000588 <__sinit>
 8000c6a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000c6e:	2b00      	cmp	r3, #0
 8000c70:	d0f3      	beq.n	8000c5a <_fflush_r+0xa>
 8000c72:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8000c74:	07d0      	lsls	r0, r2, #31
 8000c76:	d404      	bmi.n	8000c82 <_fflush_r+0x32>
 8000c78:	0599      	lsls	r1, r3, #22
 8000c7a:	d402      	bmi.n	8000c82 <_fflush_r+0x32>
 8000c7c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8000c7e:	f7ff fe68 	bl	8000952 <__retarget_lock_acquire_recursive>
 8000c82:	4628      	mov	r0, r5
 8000c84:	4621      	mov	r1, r4
 8000c86:	f7ff ff5f 	bl	8000b48 <__sflush_r>
 8000c8a:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8000c8c:	07da      	lsls	r2, r3, #31
 8000c8e:	4605      	mov	r5, r0
 8000c90:	d4e4      	bmi.n	8000c5c <_fflush_r+0xc>
 8000c92:	89a3      	ldrh	r3, [r4, #12]
 8000c94:	059b      	lsls	r3, r3, #22
 8000c96:	d4e1      	bmi.n	8000c5c <_fflush_r+0xc>
 8000c98:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8000c9a:	f7ff fe5b 	bl	8000954 <__retarget_lock_release_recursive>
 8000c9e:	e7dd      	b.n	8000c5c <_fflush_r+0xc>

08000ca0 <__swhatbuf_r>:
 8000ca0:	b570      	push	{r4, r5, r6, lr}
 8000ca2:	460c      	mov	r4, r1
 8000ca4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000ca8:	2900      	cmp	r1, #0
 8000caa:	b096      	sub	sp, #88	@ 0x58
 8000cac:	4615      	mov	r5, r2
 8000cae:	461e      	mov	r6, r3
 8000cb0:	da0d      	bge.n	8000cce <__swhatbuf_r+0x2e>
 8000cb2:	89a3      	ldrh	r3, [r4, #12]
 8000cb4:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8000cb8:	f04f 0100 	mov.w	r1, #0
 8000cbc:	bf14      	ite	ne
 8000cbe:	2340      	movne	r3, #64	@ 0x40
 8000cc0:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8000cc4:	2000      	movs	r0, #0
 8000cc6:	6031      	str	r1, [r6, #0]
 8000cc8:	602b      	str	r3, [r5, #0]
 8000cca:	b016      	add	sp, #88	@ 0x58
 8000ccc:	bd70      	pop	{r4, r5, r6, pc}
 8000cce:	466a      	mov	r2, sp
 8000cd0:	f000 f848 	bl	8000d64 <_fstat_r>
 8000cd4:	2800      	cmp	r0, #0
 8000cd6:	dbec      	blt.n	8000cb2 <__swhatbuf_r+0x12>
 8000cd8:	9901      	ldr	r1, [sp, #4]
 8000cda:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8000cde:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8000ce2:	4259      	negs	r1, r3
 8000ce4:	4159      	adcs	r1, r3
 8000ce6:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8000cea:	e7eb      	b.n	8000cc4 <__swhatbuf_r+0x24>

08000cec <__smakebuf_r>:
 8000cec:	898b      	ldrh	r3, [r1, #12]
 8000cee:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8000cf0:	079d      	lsls	r5, r3, #30
 8000cf2:	4606      	mov	r6, r0
 8000cf4:	460c      	mov	r4, r1
 8000cf6:	d507      	bpl.n	8000d08 <__smakebuf_r+0x1c>
 8000cf8:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8000cfc:	6023      	str	r3, [r4, #0]
 8000cfe:	6123      	str	r3, [r4, #16]
 8000d00:	2301      	movs	r3, #1
 8000d02:	6163      	str	r3, [r4, #20]
 8000d04:	b003      	add	sp, #12
 8000d06:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000d08:	ab01      	add	r3, sp, #4
 8000d0a:	466a      	mov	r2, sp
 8000d0c:	f7ff ffc8 	bl	8000ca0 <__swhatbuf_r>
 8000d10:	9f00      	ldr	r7, [sp, #0]
 8000d12:	4605      	mov	r5, r0
 8000d14:	4639      	mov	r1, r7
 8000d16:	4630      	mov	r0, r6
 8000d18:	f7ff fe8a 	bl	8000a30 <_malloc_r>
 8000d1c:	b948      	cbnz	r0, 8000d32 <__smakebuf_r+0x46>
 8000d1e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000d22:	059a      	lsls	r2, r3, #22
 8000d24:	d4ee      	bmi.n	8000d04 <__smakebuf_r+0x18>
 8000d26:	f023 0303 	bic.w	r3, r3, #3
 8000d2a:	f043 0302 	orr.w	r3, r3, #2
 8000d2e:	81a3      	strh	r3, [r4, #12]
 8000d30:	e7e2      	b.n	8000cf8 <__smakebuf_r+0xc>
 8000d32:	89a3      	ldrh	r3, [r4, #12]
 8000d34:	6020      	str	r0, [r4, #0]
 8000d36:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000d3a:	81a3      	strh	r3, [r4, #12]
 8000d3c:	9b01      	ldr	r3, [sp, #4]
 8000d3e:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8000d42:	b15b      	cbz	r3, 8000d5c <__smakebuf_r+0x70>
 8000d44:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000d48:	4630      	mov	r0, r6
 8000d4a:	f000 f81d 	bl	8000d88 <_isatty_r>
 8000d4e:	b128      	cbz	r0, 8000d5c <__smakebuf_r+0x70>
 8000d50:	89a3      	ldrh	r3, [r4, #12]
 8000d52:	f023 0303 	bic.w	r3, r3, #3
 8000d56:	f043 0301 	orr.w	r3, r3, #1
 8000d5a:	81a3      	strh	r3, [r4, #12]
 8000d5c:	89a3      	ldrh	r3, [r4, #12]
 8000d5e:	431d      	orrs	r5, r3
 8000d60:	81a5      	strh	r5, [r4, #12]
 8000d62:	e7cf      	b.n	8000d04 <__smakebuf_r+0x18>

08000d64 <_fstat_r>:
 8000d64:	b538      	push	{r3, r4, r5, lr}
 8000d66:	4d07      	ldr	r5, [pc, #28]	@ (8000d84 <_fstat_r+0x20>)
 8000d68:	2300      	movs	r3, #0
 8000d6a:	4604      	mov	r4, r0
 8000d6c:	4608      	mov	r0, r1
 8000d6e:	4611      	mov	r1, r2
 8000d70:	602b      	str	r3, [r5, #0]
 8000d72:	f7ff faf4 	bl	800035e <_fstat>
 8000d76:	1c43      	adds	r3, r0, #1
 8000d78:	d102      	bne.n	8000d80 <_fstat_r+0x1c>
 8000d7a:	682b      	ldr	r3, [r5, #0]
 8000d7c:	b103      	cbz	r3, 8000d80 <_fstat_r+0x1c>
 8000d7e:	6023      	str	r3, [r4, #0]
 8000d80:	bd38      	pop	{r3, r4, r5, pc}
 8000d82:	bf00      	nop
 8000d84:	200001c4 	.word	0x200001c4

08000d88 <_isatty_r>:
 8000d88:	b538      	push	{r3, r4, r5, lr}
 8000d8a:	4d06      	ldr	r5, [pc, #24]	@ (8000da4 <_isatty_r+0x1c>)
 8000d8c:	2300      	movs	r3, #0
 8000d8e:	4604      	mov	r4, r0
 8000d90:	4608      	mov	r0, r1
 8000d92:	602b      	str	r3, [r5, #0]
 8000d94:	f7ff faf3 	bl	800037e <_isatty>
 8000d98:	1c43      	adds	r3, r0, #1
 8000d9a:	d102      	bne.n	8000da2 <_isatty_r+0x1a>
 8000d9c:	682b      	ldr	r3, [r5, #0]
 8000d9e:	b103      	cbz	r3, 8000da2 <_isatty_r+0x1a>
 8000da0:	6023      	str	r3, [r4, #0]
 8000da2:	bd38      	pop	{r3, r4, r5, pc}
 8000da4:	200001c4 	.word	0x200001c4

08000da8 <_sbrk_r>:
 8000da8:	b538      	push	{r3, r4, r5, lr}
 8000daa:	4d06      	ldr	r5, [pc, #24]	@ (8000dc4 <_sbrk_r+0x1c>)
 8000dac:	2300      	movs	r3, #0
 8000dae:	4604      	mov	r4, r0
 8000db0:	4608      	mov	r0, r1
 8000db2:	602b      	str	r3, [r5, #0]
 8000db4:	f7ff fafc 	bl	80003b0 <_sbrk>
 8000db8:	1c43      	adds	r3, r0, #1
 8000dba:	d102      	bne.n	8000dc2 <_sbrk_r+0x1a>
 8000dbc:	682b      	ldr	r3, [r5, #0]
 8000dbe:	b103      	cbz	r3, 8000dc2 <_sbrk_r+0x1a>
 8000dc0:	6023      	str	r3, [r4, #0]
 8000dc2:	bd38      	pop	{r3, r4, r5, pc}
 8000dc4:	200001c4 	.word	0x200001c4

08000dc8 <_init>:
 8000dc8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000dca:	bf00      	nop
 8000dcc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000dce:	bc08      	pop	{r3}
 8000dd0:	469e      	mov	lr, r3
 8000dd2:	4770      	bx	lr

08000dd4 <_fini>:
 8000dd4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000dd6:	bf00      	nop
 8000dd8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000dda:	bc08      	pop	{r3}
 8000ddc:	469e      	mov	lr, r3
 8000dde:	4770      	bx	lr
